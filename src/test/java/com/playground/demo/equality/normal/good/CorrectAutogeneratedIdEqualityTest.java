package com.playground.demo.equality.normal.good;

import com.mihalcea.equality.AbstractEqualityCheckTest;
import com.mihalcea.identifier.Identifiable;
import lombok.Getter;
import lombok.Setter;
import org.junit.Test;

import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Table;
import java.util.Objects;
import java.util.UUID;

public class CorrectAutogeneratedIdEqualityTest extends AbstractEqualityCheckTest<CorrectAutogeneratedIdEqualityTest.Post> {

    @Override
    protected Class<?>[] entities() {
        return new Class[]{
                CorrectAutogeneratedIdEqualityTest.Post.class
        };
    }

    @Test
    public void testEquality() {
        CorrectAutogeneratedIdEqualityTest.Post post = new CorrectAutogeneratedIdEqualityTest.Post();
        post.setTitle("Any name here");


        assertEqualityConsistency(CorrectAutogeneratedIdEqualityTest.Post.class, post);
    }

    @Entity(name = "Post5")
    @Table(name = "post5")
    @Getter
    @Setter
    public static class Post implements Identifiable<UUID> {

        @Id
        @GeneratedValue
        private UUID id;

        private String title;

        @Override
        public boolean equals(Object o) {
            if (this == o) return true;
            if (!(o instanceof CorrectAutogeneratedIdEqualityTest.Post)) return false;
            CorrectAutogeneratedIdEqualityTest.Post post = (CorrectAutogeneratedIdEqualityTest.Post) o;
            return Objects.equals(this.getId(), post.getId());
        }

        @Override
        public int hashCode() {
            return Objects.hash(12345678);
        }
    }
}